{
  "Outputs": {
    "VpcID": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "VPC"
      }
    },
    "FrontEndElbSubnetOne": {
      "Description": "Front-End ELB Subnet One Identifier",
      "Value": {
        "Ref": "PublicSubnetElbAZ1"
      }
    },
    "FrontEndElbSubnetTwo": {
      "Description": "Front-End ELB Subnet Two Identifier",
      "Value": {
        "Ref": "PublicSubnetElbAZ2"
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "sample - Base - Modified by Eduardo",
  "Parameters": {
    "FrontEndIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "BackEndIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "ElbIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "WorkersIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "CachingIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "OthersIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "ExtraIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "DestinationIpBlocks": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    }
  },
  "Mappings": {
    "Region2AZ": {
      "us-west-1": {
        "AZs": [
          "us-west-1a",
          "us-west-1d"
        ],
        "ZoneA": "us-west-1a",
        "ZoneB": "us-west-1d"
      },
      "us-east-1": {
        "AZs": [
          "us-east-1a",
          "us-east-1d"
        ],
        "ZoneA": "us-east-1a",
        "ZoneB": "us-east-1d"
      },
      "eu-west-1": {
        "AZs": [
          "eu-west-1a",
          "eu-west-1c"
        ],
        "ZoneA": "eu-west-1a",
        "ZoneB": "eu-west-1c"
      },
      "eu-central-1": {
        "AZs": [
          "eu-central-1a",
          "eu-central-1c"
        ],
        "ZoneA": "eu-central-1a",
        "ZoneB": "eu-central-1c"
      }
    },
    "SubnetAddressingByRegion": {
      "eu-west-1": {
        "CIDR": "10.200.0.0/16",
        "FrontEndAZ1": "10.200.0.0/18",
        "FrontEndAZ2": "10.200.64.0/18",
        "BackEndAZ1": "10.200.128.0/20",
        "BackEndAZ2": "10.200.144.0/20",
        "ElbAZ1": "10.200.160.0/22",
        "ElbAZ2": "10.200.164.0/22",
        "WorkersAZ1": "10.200.168.0/22",
        "WorkersAZ2": "10.200.172.0/22",
        "CachingAZ1": "10.200.176.0/22",
        "CachingAZ2": "10.200.180.0/22",
        "OthersAZ1": "10.200.184.0/22",
        "OthersAZ2": "10.200.188.0/22",
        "Extra": "10.200.192.0/18"
      },
      "us-east-1": {
        "CIDR": "10.200.0.0/16",
        "FrontEndAZ1": "10.200.0.0/18",
        "FrontEndAZ2": "10.200.64.0/18",
        "BackEndAZ1": "10.200.128.0/20",
        "BackEndAZ2": "10.200.144.0/20",
        "ElbAZ1": "10.200.160.0/22",
        "ElbAZ2": "10.200.164.0/22",
        "WorkersAZ1": "10.200.168.0/22",
        "WorkersAZ2": "10.200.172.0/22",
        "CachingAZ1": "10.200.176.0/22",
        "CachingAZ2": "10.200.180.0/22",
        "OthersAZ1": "10.200.184.0/22",
        "OthersAZ2": "10.200.188.0/22",
        "Extra": "10.200.192.0/18"
      },
      "eu-central-1": {
        "CIDR": "10.200.0.0/16",
        "FrontEndAZ1": "10.200.0.0/18",
        "FrontEndAZ2": "10.200.64.0/18",
        "BackEndAZ1": "10.200.128.0/20",
        "BackEndAZ2": "10.200.144.0/20",
        "ElbAZ1": "10.200.160.0/22",
        "ElbAZ2": "10.200.164.0/22",
        "WorkersAZ1": "10.200.168.0/22",
        "WorkersAZ2": "10.200.172.0/22",
        "CachingAZ1": "10.200.176.0/22",
        "CachingAZ2": "10.200.180.0/22",
        "OthersAZ1": "10.200.184.0/22",
        "OthersAZ2": "10.200.188.0/22",
        "Extra": "10.200.192.0/18"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sample"
          },
          {
            "Key": "Env",
            "Value": "Prod"
          }
        ]
      }
    },
    "PrivateSubnetFrontEndAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "FrontEndAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Front-End"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PrivateSubnetFrontEndAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "FrontEndAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Front-End"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PublicSubnetElbAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "ElbAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - ELB"
          },
          {
            "Key": "Subnet",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicSubnetElbAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "ElbAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - ELB"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PrivateSubnetBackEndAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "BackEndAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Back-End"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PrivateSubnetBackEndAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "BackEndAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Back-End"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PublicSubnetWorkersAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "WorkersAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - Workers"
          },
          {
            "Key": "Subnet",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicSubnetWorkersAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "WorkersAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - Workers"
          },
          {
            "Key": "Subnet",
            "Value": "Public"
          }
        ]
      }
    },
    "PrivateSubnetCachingAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "CachingAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Caching"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PrivateSubnetCachingAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "CachingAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Caching"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "PublicSubnetOthersAZ1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "OthersAZ1"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneA"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - Others"
          },
          {
            "Key": "Subnet",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicSubnetOthersAZ2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "OthersAZ2"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - Others"
          },
          {
            "Key": "Subnet",
            "Value": "Public"
          }
        ]
      }
    },
    "PrivateSubnetExtra": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "SubnetAddressingByRegion",
            {
              "Ref": "AWS::Region"
            },
            "Extra"
          ]
        },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "Region2AZ",
            {
              "Ref": "AWS::Region"
            },
            "ZoneB"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Extra"
          },
          {
            "Key": "Subnet",
            "Value": "Private"
          }
        ]
      }
    },
    "FrontEndSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FrontEnd - ACL"
          }
        ]
      }
    },
    "BackEndSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackEnd - ACL"
          }
        ]
      }
    },
    "ElbSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ELB - ACL"
          }
        ]
      }
    },
    "WorkersSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Workers - ACL"
          }
        ]
      }
    },
    "CachingSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Caching - ACL"
          }
        ]
      }
    },
    "OthersSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Others - ACL"
          }
        ]
      }
    },
    "ExtraSubnetAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Extra - ACL"
          }
        ]
      }
    },
    "FrontEndInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "FrontEndSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "FrontEndSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "FrontEndIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "FrontEndOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "FrontEndSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "FrontEndSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "FrontEndIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllFrontEndAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetFrontEndAZ1",
        "FrontEndSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetFrontEndAZ1"
        },
        "NetworkAclId": {
          "Ref": "FrontEndSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllFrontEndAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetFrontEndAZ2",
        "FrontEndSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetFrontEndAZ2"
        },
        "NetworkAclId": {
          "Ref": "FrontEndSubnetAcl"
        }
      }
    },
    "BackEndInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "BackEndSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "BackEndSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "BackEndIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "BackEndOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "BackEndSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "BackEndSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "BackEndIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllBackEndAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetBackEndAZ1",
        "BackEndSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetBackEndAZ1"
        },
        "NetworkAclId": {
          "Ref": "BackEndSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllBackEndAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetBackEndAZ2",
        "BackEndSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetBackEndAZ2"
        },
        "NetworkAclId": {
          "Ref": "BackEndSubnetAcl"
        }
      }
    },
    "ElbInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "ElbSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "ElbSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "ElbIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "ElbOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "ElbSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "ElbSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "ElbIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllElbAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetElbAZ1",
        "ElbSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetElbAZ1"
        },
        "NetworkAclId": {
          "Ref": "ElbSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllElbAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetElbAZ2",
        "ElbSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetElbAZ2"
        },
        "NetworkAclId": {
          "Ref": "ElbSubnetAcl"
        }
      }
    },
    "WorkersInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "WorkersSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "WorkersSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "WorkersIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "WorkersOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "WorkersSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "WorkersSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "WorkersIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllWorkersAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetWorkersAZ1",
        "WorkersSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetWorkersAZ1"
        },
        "NetworkAclId": {
          "Ref": "WorkersSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllWorkersAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetWorkersAZ2",
        "WorkersSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetWorkersAZ2"
        },
        "NetworkAclId": {
          "Ref": "WorkersSubnetAcl"
        }
      }
    },
    "CachingInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "CachingSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "CachingSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "CachingIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "CachingOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "CachingSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "CachingSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "CachingIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllCachingAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetCachingAZ1",
        "CachingSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetCachingAZ1"
        },
        "NetworkAclId": {
          "Ref": "CachingSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllCachingAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetCachingAZ2",
        "CachingSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetCachingAZ2"
        },
        "NetworkAclId": {
          "Ref": "CachingSubnetAcl"
        }
      }
    },
    "OthersInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "OthersSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "OthersSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "OthersIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OthersOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "OthersSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "OthersSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "OthersIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllOthersAZ1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetOthersAZ1",
        "OthersSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetOthersAZ1"
        },
        "NetworkAclId": {
          "Ref": "OthersSubnetAcl"
        }
      }
    },
    "AclAssociationAllowAllOthersAZ2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnetOthersAZ2",
        "OthersSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetOthersAZ2"
        },
        "NetworkAclId": {
          "Ref": "OthersSubnetAcl"
        }
      }
    },
    "ExtraInAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "ExtraSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "ExtraSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "ExtraIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "ExtraOutAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "ExtraSubnetAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "ExtraSubnetAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": {
          "Ref": "ExtraIpBlocks"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "AclAssociationAllowAllExtra": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnetExtra",
        "ExtraSubnetAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetExtra"
        },
        "NetworkAclId": {
          "Ref": "ExtraSubnetAcl"
        }
      }
    },
    "IGW": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "IGW - Prod VPC"
          }
        ]
      }
    },
    "AttachIGW": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": "IGW",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "IGW"
        }
      }
    },
    "PublicRoutingTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public - Routing Table"
          }
        ]
      }
    },
    "PrivateRoutingTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private - Routing Table"
          }
        ]
      }
    },
    "PublicRoutingTableAssociationWorkersAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetWorkersAZ1",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetWorkersAZ1"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PublicRoutingTableAssociationWorkersAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetWorkersAZ2",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetWorkersAZ2"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PublicRoutingTableAssociationElbAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetElbAZ1",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetElbAZ1"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PublicRoutingTableAssociationElbAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetElbAZ2",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetElbAZ2"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PublicRoutingTableAssociationOthersAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetOthersAZ1",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetOthersAZ1"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PublicRoutingTableAssociationOthersAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnetOthersAZ2",
        "PublicRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetOthersAZ2"
        },
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationFrontEndAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetFrontEndAZ1",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetFrontEndAZ1"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationFrontEndAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetFrontEndAZ2",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetFrontEndAZ2"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationBackEndAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetBackEndAZ1",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetBackEndAZ1"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationBackEndAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetBackEndAZ2",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetBackEndAZ2"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationCachingAZ1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetCachingAZ1",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetCachingAZ1"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationCachingAZ2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetCachingAZ2",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetCachingAZ2"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PrivateRoutingTableAssociationExtra": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnetExtra",
        "PrivateRoutingTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetExtra"
        },
        "RouteTableId": {
          "Ref": "PrivateRoutingTable"
        }
      }
    },
    "PublicDefaultRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRoutingTable",
        "AttachIGW"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRoutingTable"
        },
        "DestinationCidrBlock": {
          "Ref": "DestinationIpBlocks"
        },
        "GatewayId": {
          "Ref": "IGW"
        }
      }
    }
  }
}