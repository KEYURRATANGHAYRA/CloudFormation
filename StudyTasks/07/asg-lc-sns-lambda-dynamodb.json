{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CFN stack that creates ASG, LaunchConfiguration, SNS Topic, and a Lambda Function that updates a DynamoDB table whenever the ASG had instances added/removed for any reason",
  "Parameters": {
    "s3BucketWithFunctions": {
      "Description": "Name of S3 bucket where the Lambda functions are hosted in",
      "Type": "String",
      "Default": "lambda-studies"
    },
    "DBUpdaterLambdaFunction": {
      "Description": "Name of zip file that contains the Lambda function that will update db in case instances get up/down on the ASG",
      "Type": "String",
      "Default": "functions/DynamoDBUpdater.zip"
    },
    "LambdaPermissionsPackage": {
      "Description": "Name of zip file that contains the extra lambda function that sets permissions to the SNS topic automatically to the main Lambda Function (DBUpdaterLambdaFunction)",
      "Type": "String",
      "Default": "functions/SetsPermissionsForSNSTopic.zip"
    },
    "AMI": {
      "Description": "AMI ID that is going to be used by the ASG",
      "Type": "String",
      "Default": "ami-e4d18e93",
      "MinLength": "10",
      "MaxLength": "15"
    },
    "KeyName": {
      "Description": "Name of Key Pair that is going to be used by the instances launched in ASG",
      "Type": "String",
      "Default": "LinuxKey"
    },
    "InstanceType": {
      "Description": "Instance Type that is going to be set-up for the instances in ASG",
      "Type": "String",
      "Default": "t2.micro"
    }
  },
  "Resources": {
    "CustomDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "ASG_History",
        "AttributeDefinitions" : [
          {
            "AttributeName" : "status",
            "AttributeType" : "S"   
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "status",
            "KeyType" : "HASH"
          } 
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "10"
        }
      }
    },
    "CustomLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "AMI"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        }
      }
    },
    "CustomASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "CustomLaunchConfiguration"
        },
        "MinSize": "2",
        "MaxSize": "5",
        "DesiredCapacity": "3",
        "NotificationConfigurations": [
          {
            "TopicARN": {
              "Ref": "CustomSNSTopic"
            },
            "NotificationTypes": [
              "autoscaling:EC2_INSTANCE_LAUNCH",
              "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
              "autoscaling:EC2_INSTANCE_TERMINATE",
              "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
            ]
          }
        ]
      }
    },
    "CustomSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "ASG_Status_Log",
        "Subscription": [
          {
            "Endpoint": "eduardoamendola@gmail.com",
            "Protocol": "email"
          },
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "DBUpdateLambda",
                "Arn"
              ]
            },
            "Protocol": "lambda"
          }
        ]
      }
    },
    "DBUpdateLambda": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "s3BucketWithFunctions"
          },
          "S3Key": {
            "Ref": "DBUpdaterLambdaFunction"
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs"
      },
      "Type": "AWS::Lambda::Function"
    },
    "LambdaPermissions": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "s3BucketWithFunctions"
          },
          "S3Key": {
            "Ref": "LambdaPermissionsPackage"
          }
        },
        "Runtime": "nodejs"
      }
    },
    "LambdaPermissionsResource": {
      "Type": "Custom::LambdaPermissionsResource",
      "DependsOn": [
        "LambdaPermissions",
        "DBUpdateLambda",
        "CustomSNSTopic"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaPermissions",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "LambdaFx": {
          "Fn::GetAtt": [
            "DBUpdateLambda",
            "Arn"
          ]
        }
      }
    },
    "LambdaExecRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Sid": ""
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:*"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Action": [
                    "lambda:*"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:lambda:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:*:*:*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:DescribeStacks*"
                  ],
                  "Resource": [
                    "arn:aws:cloudformation:*:*:*"
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AllowActions"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  },
  "Outputs": {
    "AutoScalingGroup": {
      "Value": {
        "Ref": "CustomASG"
      }
    },
    "LaunchConfiguration": {
      "Value": {
        "Ref": "CustomLaunchConfiguration"
      }
    },
    "SNSTopic": {
      "Value": {
        "Ref": "CustomSNSTopic"
      }
    },
    "LambdaFunction": {
      "Value": {
        "Ref": "DBUpdateLambda"
      }
    },
    "Database": {
      "Value": {
        "Ref": "CustomDynamoDBTable"
      }
    }
  }
}